name: cleanup runners

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 1,13 * * *'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
      id-token: write
      contents: read

jobs:
  scaleagents:
    environment: 
      name: production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      - name: 'get acr data'
        id: getinfraparams
        run: |
          parse_tf_param_to_env_var() {
            # read tfvar files from infra folder and look for a match, the last match is set as env value
            # $1 = name of parameter to match
            # $2 = the env value in subsequent steps
            param_value=""
            for f in $( find ./infra -name *.auto.tfvars ); do 
              for match in $(grep "^$1 " $f); do
                if [[ "$match" =~ \"(.*)\" ]] ; then
                    param_value="${BASH_REMATCH[1]}"
                fi
              done
            done
            echo "$2=$param_value" >> $GITHUB_ENV
          }
          parse_tf_param_to_env_var 'registry_name'                         'RUNNER_REGISTRY_NAME'
          parse_tf_param_to_env_var 'registry_agent_pool_name'              'RUNNER_REGISTRY_AGENT_POOL_NAME'
      - name: scale-down agent pool
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
            unfinished_runs=$(
               az acr task list-runs -r $RUNNER_REGISTRY_NAME |
               jq -c '[.[] | {name: .name, status: .status} | select( .status == "Running" or .status == "Queued" or .status == "Started")] | length' --raw-output
            )
            if [ "$unfinished_runs" == '0' ] ; then
              echo "::notice::no more running build tasks, scaling down run"
              az acr agentpool update \
                --registry $RUNNER_REGISTRY_NAME \
                --name $RUNNER_REGISTRY_AGENT_POOL_NAME \
                --count '0'
            else
              echo "::warning::found $unfinished_runs unfinished runs on acr $RUNNER_REGISTRY_NAME. Scale down cancelled"
            fi
    
